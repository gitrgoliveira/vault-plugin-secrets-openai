name: Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. v0.1.0)'
        required: true
        default: ''

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true

      - name: Set version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "push" ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
          else
            VERSION=${{ github.event.inputs.version }}
            if [[ ! $VERSION =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "ERROR: Version must be in format v0.1.0"
              exit 1
            fi
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Run tests
        run: make test
      
      - name: Build release binaries
        run: |
          # Build Linux binary
          GOOS=linux GOARCH=amd64 go build -o bin/vault-plugin-secrets-openai ./cmd/vault-plugin-secrets-openai
          cd bin && tar czf vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-linux-amd64.tar.gz vault-plugin-secrets-openai
          shasum -a 256 vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-linux-amd64.tar.gz > vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-linux-amd64.tar.gz.sha256
          cd ..
          
          # Build macOS Intel binary
          GOOS=darwin GOARCH=amd64 go build -o bin/vault-plugin-secrets-openai ./cmd/vault-plugin-secrets-openai
          cd bin && tar czf vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz vault-plugin-secrets-openai
          shasum -a 256 vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz > vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz.sha256
          cd ..
          
          # Build macOS Apple Silicon binary
          GOOS=darwin GOARCH=arm64 go build -o bin/vault-plugin-secrets-openai ./cmd/vault-plugin-secrets-openai
          cd bin && tar czf vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-darwin-arm64.tar.gz vault-plugin-secrets-openai
          shasum -a 256 vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-darwin-arm64.tar.gz > vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-darwin-arm64.tar.gz.sha256

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: Release ${{ steps.version.outputs.version }}
          draft: false
          prerelease: false
          files: |
            bin/vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-linux-amd64.tar.gz
            bin/vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-linux-amd64.tar.gz.sha256
            bin/vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz
            bin/vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-darwin-amd64.tar.gz.sha256
            bin/vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-darwin-arm64.tar.gz
            bin/vault-plugin-secrets-openai-${{ steps.version.outputs.version }}-darwin-arm64.tar.gz.sha256
